{{ 'section-main-page.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .cart-bg{
    background-color:#54582F;
   color: var(--text-color-4);
  }

    .cart-bg h1{
      color: var(--text-color-4);
    }

    ul.tab-header {
        border-bottom: 1.5px solid rgba(25, 28, 0, 0.25);
           display: flex;
    margin: 48px 0 40px 0;
    padding: 0;
    justify-content: space-around;
    list-style: none;
    }

     ul.tab-header li{
        font-weight:700;
        position:relative; padding:8px 24px;

          transition: all 600ms;
        
      min-width:118px;
     }

      ul.tab-header li a{color: var(--text-color-4); opacity:.5;
    
      transition: all 600ms;
     
    
    }

       ul.tab-header li.active a {color: var(--text-color-4); opacity:1;}

       ul.tab-header li:hover a{ opacity:1; }

       ul.tab-header li.active a:after,  ul.tab-header li:hover a:after{
            content:'';
            height:4px;
            background:#BEFA23;
            width:100%;
            position:absolute;
            bottom:-1px;
            left:0;
       }


.tab-content__header {

cursor:pointer;

transition:all 600ms;
   
}


.tab-content__header:hover {
transition:scale(.2)
}
.table-style{
    border-collapse: collapse;
    text-align: center; 
    width: 100%!important; 
    background-color: transparent; 
    color: white;
}

.table-style tr th{font-size: 16px;
font-style: normal;
font-weight: 700;}

.table-style td{
    padding:1em 1.6em!important;
    width:100px;
  vertical-align: top;
}

 .bg-{{ page.id }}{
    position:relative;
 }
 .bg-{{ page.id }}:after{
    content:'';
    mix-blend-mode: multiply;
    background-image: url({{ 'DtoZxu_2.png' |  file_url }}) !important;
    background-position:center;
    width:100%;
    height:100%;
    left:0;
    top:0;
    position:absolute;
    z-index:0;
}

.table-loop{
    margin:0 0 8px;
    padding:32px 0 0;
    border-bottom: 3px solid var(--Dark-Green, #191C00);

}

.table-loop:last-child{
    border-bottom:0!important; 
}

.tab-content__table {
    padding-bottom:48px;
}


.product-variations{
    max-width:447px; width:100%;
}
.tab-content__header{
    margin-bottom:20px;
    gap:5rem;
}


.content {
  display: none;
  opacity: 0;
  transition: opacity 0.5s;
}

.content.active {
  display: block;
  opacity: 1;
}

.open{
    display:flex!important;
}

.tab-content__table{
    display:none;
}
.arrow-up img{
    transition:all 600ms;
    transform:rotate(0deg);
}

.tab-active .arrow-up img{
    transform:rotate(180deg);
}

@media(max-width:749px){

.tab-content__header{    flex-direction: column;
    gap: 2rem;}


    .tab-content__table{
      display:block!important;
    }

    .arrow-up{
      display:none!important;
    }
}



{%- endstyle -%}

<section class="cart-bg  bg-{{ page.id }}">

<div class="page-width  section-{{ section.id }}-padding position-relative z-2">


<div class="text-center">

  <h1 class="mb-8 main-page-title h2 page-title h0{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
    {{ page.title | escape }}
  </h1>



  

  <div class="text-big {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
    {{ page.content }}
  </div>

</div>

<div class="tab-container">
  <ul class="tab-header text-big">
    <li class="tab active" data-target="#core-performance"><a href="#core-performance">CORE PERFORMANCE</a></li>
    <li class="tab" data-target="#comfort"><a href="#comfort">COMFORT</a></li>
    <li class="tab" data-target="#hi-tech-performance"><a href="#hi-tech-performance">HI-TECH PERFORMANCE</a></li>
  </ul>

  <div class="tab-content">
    <div id="core-performance" class="content active">{% render 'sizechart-core-performance' %}</div>
    <div id="comfort" class="content">{% render 'sizechart-comfort' %}</div>
    <div id="hi-tech-performance" class="content">{% render 'sizechart-hitech-performance' %}</div>
  </div>
</div>




</div>
</section>


<script>
   document.addEventListener('DOMContentLoaded', function () {
  const tabs = document.querySelectorAll('.tab');
  const contents = document.querySelectorAll('.content');

  tabs.forEach(tab => {
    tab.addEventListener('click', function (event) {
      event.preventDefault(); // Prevent default anchor behavior

      // Remove active class from all tabs and contents
      tabs.forEach(t => t.classList.remove('active'));
      contents.forEach(c => {
        c.classList.remove('active');
        c.style.opacity = 0; // Start with zero opacity
      });

      // Add active class to the clicked tab
      this.classList.add('active');
      const target = document.querySelector(this.getAttribute('data-target'));

      // Add active class and fade-in effect to the content
      target.classList.add('active');
      setTimeout(() => {
        target.style.opacity = 1; // Fade-in effect
      }, 10); // Small delay to allow CSS transition
    });
  });
});


//COLLASPE CODE

const header = document.querySelectorAll('.tab-content__header');
const content__table = document.querySelectorAll('.tab-content__table');

const checkWindowSize = () => {
    return window.innerWidth >= 749;
};

header.forEach(tab => {
    tab.addEventListener('click', function () {

        // Remove active class from all tabs and hide all tables
        header.forEach(removeActiveTab => {
            removeActiveTab.classList.remove('tab-active');
        });

        content__table.forEach(content => {
            content.classList.remove('d-flex');
        });

        if (checkWindowSize()) {
            // Add active class only if the window width is >= 749px
            this.classList.add('tab-active');
            this.nextElementSibling.classList.add('d-flex');
        }
    });
});

// Optionally, add resize listener if you want to handle changes during window resizing
window.addEventListener('resize', () => {
    if (!checkWindowSize()) {
        // On window resize below 749px, remove 'tab-active' and 'd-flex' classes
        header.forEach(removeActiveTab => {
            removeActiveTab.classList.remove('tab-active');
        });

        content__table.forEach(content => {
            content.classList.remove('d-flex');
        });
    }
});



// adjust table for mobile

function transformTableForMobile() {
  const table = document.querySelector(".table-style");
  if (!table) return;

  const thead = table.querySelector("thead");
  const tbody = table.querySelector("tbody");

  if (window.innerWidth <= 768) {
    // Convert table for mobile
    const newTable = document.createElement("table");
    newTable.className = "table-style";

    // Create new table head
    const newThead = document.createElement("thead");
    const newHeadRow = document.createElement("tr");

    // Add empty top-left cell
    newHeadRow.appendChild(document.createElement("th"));

    // Extract first column (CHEST, HIPS, HEIGHT) and set as new headers
    [...tbody.rows].forEach((row) => {
      const th = document.createElement("th");
      th.innerHTML = row.cells[0].innerHTML;
      newHeadRow.appendChild(th);
    });

    newThead.appendChild(newHeadRow);
    newTable.appendChild(newThead);

    // Create new table body
    const newTbody = document.createElement("tbody");

    // Iterate over size columns (S, M, L, XL, etc.)
    for (let col = 1; col < thead.rows[0].cells.length; col++) {
      const newRow = document.createElement("tr");

      // Add size name as first column
      const sizeTh = document.createElement("th");
      sizeTh.innerHTML = thead.rows[0].cells[col].innerHTML;
      newRow.appendChild(sizeTh);

      // Add corresponding CHEST, HIPS, HEIGHT data
      [...tbody.rows].forEach((row) => {
        const newCell = document.createElement("td");
        newCell.innerHTML = row.cells[col].innerHTML;
        newRow.appendChild(newCell);
      });

      newTbody.appendChild(newRow);
    }

    newTable.appendChild(newTbody);
    table.parentElement.replaceChild(newTable, table);
  }
}
// Run on page load and resize
window.addEventListener("load", transformTableForMobile);
window.addEventListener("resize", transformTableForMobile);


</script>


{% schema %}
{
  "name": "t:sections.main-page.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
